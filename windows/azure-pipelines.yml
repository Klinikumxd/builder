
# Turn off auto builds for commits
trigger: none
pr: none

variables:
  # pytorch.build.version: '1.0'
  # pytorch.build.number: 1
  # pytorch.branch: master
  # pytorch.repo: pytorch
  build.linux.enabled: false
  build.cpu.enabled: true
  build.cuda.enabled: true
  build.wheels.enabled: true
  build.conda.enabled: true
  use.sccache.cpu: 0
  use.sccache.cuda: 1
  self.hosted.agent.cpu: false
  self.hosted.agent.cuda: true

jobs:
- job: 'Windows_CPU_Wheels_Build'
  timeoutInMinutes: 0
  cancelTimeoutInMinutes: 5
  condition: and(eq(variables['build.cpu.enabled'], 'true'), eq(variables['build.wheels.enabled'], 'true'))
  variables:
    CUDA_VERSION: cpu
    USE_SCCACHE: $(use.sccache.cpu)
  strategy:
    maxParallel: 10
    matrix:
      PY3.5:
        DESIRED_PYTHON: 3.5
      PY3.6:
        DESIRED_PYTHON: 3.6
      PY3.7:
        DESIRED_PYTHON: 3.7
      LIBTORCH:
        DESIRED_PYTHON: 3
        BUILD_PYTHONLESS: 1

  pool:
    vmImage: 'win1803'

  steps:
  - checkout: self
    clean: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cpu'], 'false')
    displayName: 'Install VS 2017'
    inputs:
      filename: 'windows/internal/vs_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cpu'], 'false')
    enabled: false
    displayName: 'Environment fix'
    inputs:
      filename: 'windows/internal/env_fix.bat'

      modifyEnvironment: false

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cpu'], 'false')
    displayName: 'Install 7Zip'
    inputs:
      filename: 'windows/internal/7z_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    displayName: 'Setup nightly variables'
    inputs:
      filename: 'windows/internal/nightly_defaults.bat'

      modifyEnvironment: true

  - script: 'call windows/build_pytorch.bat %CUDA_VERSION% %PYTORCH_BUILD_VERSION% %PYTORCH_BUILD_NUMBER%'
    displayName: Build
    env:
      MAX_JOBS: 2

  - task: PublishTestResults@2 # No test results to publish
    inputs:
      testResultsFiles: 'windows/pytorch/test/**/*.xml'
      testRunTitle: 'Publish test results'
    enabled: false

  - template: templates/upload_to_s3.yml
    parameters:
      cuVer: 'cpu'
      cudaVer: 'cpu'

- job: 'Windows_CPU_Conda_Build'
  timeoutInMinutes: 0
  cancelTimeoutInMinutes: 5
  condition: and(eq(variables['build.cpu.enabled'], 'true'), eq(variables['build.conda.enabled'], 'true'))
  variables:
  - group: peterjc_anaconda_token
  - name: CUDA_VERSION
    value: cpu
  - name: USE_SCCACHE
    value: $(use.sccache.cpu)
  - name: PYTORCH_FINAL_PACKAGE_DIR
    value: '$(Build.Repository.LocalPath)\windows\output'

  strategy:
    maxParallel: 10
    matrix:
      PY3.5:
        DESIRED_PYTHON: 3.5
      PY3.6:
        DESIRED_PYTHON: 3.6
      PY3.7:
        DESIRED_PYTHON: 3.7

  pool:
    vmImage: 'win1803'

  steps:
  - checkout: self
    clean: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cpu'], 'false')
    displayName: 'Install VS 2017'
    inputs:
      filename: 'windows/internal/vs_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cpu'], 'false')
    enabled: false
    displayName: 'Environment fix'
    inputs:
      filename: 'windows/internal/env_fix.bat'

      modifyEnvironment: false

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cpu'], 'false')
    displayName: 'Install 7Zip'
    inputs:
      filename: 'windows/internal/7z_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    displayName: 'Setup nightly variables'
    inputs:
      filename: 'windows/internal/nightly_defaults.bat'

      modifyEnvironment: true

  - script: 'if not exist %PYTORCH_FINAL_PACKAGE_DIR% mkdir %PYTORCH_FINAL_PACKAGE_DIR%'
    displayName: 'Create final package directory'

  - bash: './conda/build_pytorch.sh $CUDA_VERSION $PYTORCH_BUILD_VERSION $PYTORCH_BUILD_NUMBER'
    displayName: 'Build'
    env:
      MAX_JOBS: 2

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'windows/pytorch/test/**/*.xml'
      testRunTitle: 'Publish test results'
    enabled: false

  - script: 'call windows/internal/upload.bat'
    displayName: 'Upload packages to Anaconda Cloud'
    env:
      PYTORCH_ANACONDA_USERNAME: $(peterjc_conda_username)
      PYTORCH_ANACONDA_PASSWORD: $(peterjc_conda_password)

- job: 'Linux_CPU_Conda_Build'
  timeoutInMinutes: 0
  cancelTimeoutInMinutes: 5
  condition: and(and(eq(variables['build.cpu.enabled'], 'true'), eq(variables['build.linux.enabled'], 'true')), eq(variables['build.conda.enabled'], 'true'))
  variables:
    CUDA_VERSION: cpu
    TORCH_CONDA_BUILD_FOLDER: pytorch-nightly
    PYTORCH_FINAL_PACKAGE_DIR: '$(Build.Repository.LocalPath)/output'

  strategy:
    maxParallel: 10
    matrix:
      PY3.5:
        DESIRED_PYTHON: 3.5

  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  - checkout: self
    clean: true

  - script: 'sudo apt-get install p7zip-full'
    displayName: 'Install 7Zip'

  - task: CondaEnvironment@1
    displayName: 'Install conda-build'
    inputs:
      packageSpecs: 'conda-build'

  - script: 'mkdir %PYTORCH_FINAL_PACKAGE_DIR%'
    displayName: 'Create final package directory'

  - bash: './conda/build_pytorch.sh $CUDA_VERSION $PYTORCH_BUILD_VERSION $PYTORCH_BUILD_NUMBER'
    displayName: 'Build'
    env:
      MAX_JOBS: 2

- job: 'Windows_CUDA_Wheels_Build'
  timeoutInMinutes: 0
  cancelTimeoutInMinutes: 5
  condition: and(eq(variables['build.cuda.enabled'], 'true'), eq(variables['build.wheels.enabled'], 'true'))
  variables:
    USE_SCCACHE: $(use.sccache.cuda)
  strategy:
    maxParallel: 10
    matrix:
      PY3.5_90:
        DESIRED_PYTHON: 3.5
        CUDA_VERSION: 90
      PY3.6_90:
        DESIRED_PYTHON: 3.6
        CUDA_VERSION: 90
      PY3.7_90:
        DESIRED_PYTHON: 3.7
        CUDA_VERSION: 90
      LIBTORCH_90:
        DESIRED_PYTHON: 3
        BUILD_PYTHONLESS: 1
        CUDA_VERSION: 90
      PY3.5_80:
        DESIRED_PYTHON: 3.5
        CUDA_VERSION: 80
      PY3.6_80:
        DESIRED_PYTHON: 3.6
        CUDA_VERSION: 80
      PY3.7_80:
        DESIRED_PYTHON: 3.7
        CUDA_VERSION: 80
      LIBTORCH_80:
        DESIRED_PYTHON: 3
        BUILD_PYTHONLESS: 1
        CUDA_VERSION: 80
      PY3.5_100:
        DESIRED_PYTHON: 3.5
        CUDA_VERSION: 100
      PY3.6_100:
        DESIRED_PYTHON: 3.6
        CUDA_VERSION: 100
      PY3.7_100:
        DESIRED_PYTHON: 3.7
        CUDA_VERSION: 100
      LIBTORCH_100:
        DESIRED_PYTHON: 3
        BUILD_PYTHONLESS: 1
        CUDA_VERSION: 100

  pool:
    name: 'pytorch'

  steps:
  - checkout: self
    clean: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Install VS 2017'
    inputs:
      filename: 'windows/internal/vs_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Install 7Zip'
    inputs:
      filename: 'windows/internal/7z_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Install CUDA'
    inputs:
      filename: 'windows/internal/cuda_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Environment fix'
    inputs:
      filename: 'windows/internal/env_fix.bat'

      modifyEnvironment: false

  - task: BatchScript@1
    displayName: 'Setup nightly variables'
    inputs:
      filename: 'windows/internal/nightly_defaults.bat'

      modifyEnvironment: true

  - script: 'call windows/build_pytorch.bat %CUDA_VERSION% %PYTORCH_BUILD_VERSION% %PYTORCH_BUILD_NUMBER%'
    displayName: Build

  - task: PublishTestResults@2 # No test results to publish
    inputs:
      testResultsFiles: 'windows/pytorch/test/**/*.xml'
      testRunTitle: 'Publish test results'
    enabled: false

  - template: templates/upload_to_s3.yml
    parameters:
      cuVer: 'cu$(CUDA_VERSION)'
      cudaVer: 'cuda$(CUDA_VERSION)'

- job: 'Windows_CUDA_Conda_Build'
  timeoutInMinutes: 0
  condition: and(eq(variables['build.cuda.enabled'], 'true'), eq(variables['build.conda.enabled'], 'true'))
  cancelTimeoutInMinutes: 5
  variables:
  - group: peterjc_anaconda_token
  - name: USE_SCCACHE
    value: $(use.sccache.cuda)
  - name: PYTORCH_FINAL_PACKAGE_DIR
    value: '$(Build.Repository.LocalPath)\windows\output'

  strategy:
    maxParallel: 10
    matrix:
      PY3.5_90:
        DESIRED_PYTHON: 3.5
        CUDA_VERSION: 90
      PY3.6_90:
        DESIRED_PYTHON: 3.6
        CUDA_VERSION: 90
      PY3.7_90:
        DESIRED_PYTHON: 3.7
        CUDA_VERSION: 90
      PY3.5_80:
        DESIRED_PYTHON: 3.5
        CUDA_VERSION: 80
      PY3.6_80:
        DESIRED_PYTHON: 3.6
        CUDA_VERSION: 80
      PY3.7_80:
        DESIRED_PYTHON: 3.7
        CUDA_VERSION: 80
      PY3.5_100:
        DESIRED_PYTHON: 3.5
        CUDA_VERSION: 100
      PY3.6_100:
        DESIRED_PYTHON: 3.6
        CUDA_VERSION: 100
      PY3.7_100:
        DESIRED_PYTHON: 3.7
        CUDA_VERSION: 100

  pool:
    name: 'pytorch'

  steps:
  - checkout: self
    clean: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Install VS 2017'
    inputs:
      filename: 'windows/internal/vs_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Install 7Zip'
    inputs:
      filename: 'windows/internal/7z_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Install CUDA'
    inputs:
      filename: 'windows/internal/cuda_install.bat'

      modifyEnvironment: true

  - task: BatchScript@1
    condition: eq(variables['self.hosted.agent.cuda'], 'false')
    displayName: 'Environment fix'
    inputs:
      filename: 'windows/internal/env_fix.bat'

      modifyEnvironment: false

  - task: BatchScript@1
    displayName: 'Setup nightly variables'
    inputs:
      filename: 'windows/internal/nightly_defaults.bat'

      modifyEnvironment: true

  - script: 'if not exist %PYTORCH_FINAL_PACKAGE_DIR% mkdir %PYTORCH_FINAL_PACKAGE_DIR%'
    displayName: 'Create final package directory'

  - bash: './conda/build_pytorch.sh $CUDA_VERSION $PYTORCH_BUILD_VERSION $PYTORCH_BUILD_NUMBER'
    displayName: 'Build'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'windows/pytorch/test/**/*.xml'
      testRunTitle: 'Publish test results'
    enabled: false

  - script: 'call windows/internal/upload.bat'
    displayName: 'Upload packages to Anaconda Cloud'
    env:
      PYTORCH_ANACONDA_USERNAME: $(peterjc_conda_username)
      PYTORCH_ANACONDA_PASSWORD: $(peterjc_conda_password)
